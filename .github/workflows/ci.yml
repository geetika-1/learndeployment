name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  backend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: backend/package-lock.json
      - name: Install deps
        run: npm ci
      - name: Run tests
        run: npm test --silent

  frontend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: frontend/package-lock.json
      - name: Install deps
        run: npm ci
      - name: Build
        run: npm run build

  docker-build:
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # - name: Set up Google Cloud SDK 
      #   uses: google-github-actions/setup-gcloud@v3
      #   with: 
      #     project_id: ${{ secrets.GCP_PROJECT_ID }} 
      #     service_account_key: ${{ secrets.GCP_SA_KEY }} 
      #     export_default_credentials: true
      
      # - name: Configure Docker for Google Artifact Registry
        # run: gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev --quiet

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
            credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker for GAR
        run: gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev --quiet   

    
      - name: Debug GCP Auth
        run: |
          gcloud config set account github-run-action@animated-surfer-471108-i9.iam.gserviceaccount.com
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud auth list
          gcloud projects list --filter="${{ secrets.GCP_PROJECT_ID }}"
          gcloud artifacts repositories list --project=${{ secrets.GCP_PROJECT_ID }} --location=${{ secrets.GCP_REGION }}
     
      - name: Build backend image
        run: |
          docker build \
            -t ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO_NAME }}/${{ secrets.BE_IMAGE_NAME }}:${{ github.sha }} \
            -t ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO_NAME }}/${{ secrets.BE_IMAGE_NAME }}:latest \
            -f backend/Dockerfile ./backend

      - name: Build frontend image
        run: |
          docker build \
            -t ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO_NAME }}/${{ secrets.FE_IMAGE_NAME }}:${{ github.sha }} \
            -t ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO_NAME }}/${{ secrets.FE_IMAGE_NAME }}:latest \
            -f frontend/Dockerfile ./frontend


      - name: Push to Google Artifact Registry
        run: |
          docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO_NAME }}/${{ secrets.BE_IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO_NAME }}/${{ secrets.BE_IMAGE_NAME }}:latest
          docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO_NAME }}/${{ secrets.FE_IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO_NAME }}/${{ secrets.FE_IMAGE_NAME }}:latest

      - name: deploy Backend
        run: | 
          gcloud run deploy backend-service \
            --image ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO_NAME }}/${{ secrets.BE_IMAGE_NAME }}:latest \
            --region ${{ secrets.GCP_REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --port 8080

      - name: deploy Frontend
        run: | 
          gcloud run deploy frontend-service \
            --image ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO_NAME }}/${{ secrets.FE_IMAGE_NAME }}:latest \
            --region ${{ secrets.GCP_REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --port 80



 